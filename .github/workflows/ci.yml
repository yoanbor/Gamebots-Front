name: CI/CD Frontend

run-name: ${{ github.actor }} is working on the frontend

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['21.6.0']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Format code with Prettier
        run: npm run format

      - name: Build project
        run: npm run build --if-present

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CD_DOCKER_USERNAME }}
          password: ${{ secrets.CD_DOCKER_PASSWORD }}

      - name: Extract Git metadata
        id: meta
        uses: actions/checkout@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.CD_DOCKER_USERNAME }}/gamebotsfrontimage:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
          build-args: |
            INCLUDE_MONGODBTOOLS=true
            PREINSTALL_LIBS=true
